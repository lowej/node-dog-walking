
/////////////////////////////////////////////////
//Node controller for serving up the business services to presentation tier

var Dog = require('../../models/dog')
var router = require('express').Router()

//Allows all dogs in DB to be returned - HTTP GET REQUEST
router.get('/api/dogs', function (req, res, next) {
 
	Dog.find(function(err, dog){
		if(err){return next(err)}
		res.json(dog)
	})
})

//Returns a single dog based on the dogName passed to it
//Obvious issue with this is if there are more than one dogs with the same name 
//Need to change this to work of unique IDs
router.get('/api/dog', function (req, res, next) {
 
	console.log('Inside GET /api/dog, query string is: ' + req.query.dogNameParam);
	
	Dog.findOne({dogName: req.query.dogNameParam}, function (err, dog) {
	    if (err) { return next(err) }
	    res.json(dog)
	  })
})
 

//Remove a dog from the database, based on unique ID of dog.  ID generated by Mongo
router.delete('/api/dog', function(req, res, next){
	
	console.log('Inside DELETE /api/dog, query string is: ' + req.query.dogIdParam);
	
	Dog.remove({_id: req.query.dogIdParam}, function (err, dog) {
	    if (err) { return next(err) }
	    res.json(dog)
	  })
	
})




//Allows a new dog to be created - HTTP POST REQUEST
router.post('/api/dog', function(req, res, next){
	var dog = new Dog({
		dogName: req.body.dogName,
		ownerFirstName: req.body.ownerFirstName,
		ownerLastName: req.body.ownerLastName,
		dogDOB: req.body.dogDOB,
		dogStartDate: req.body.dogStartDate,
		dogPicture: req.body.dogPicture
	})
	
	dog.save(function(err, dog){
		if(err) {return next(err)}
		
		console.log('post received');
		console.log('Dog Name: ' + req.body.dogName)
		console.log('Owner First Name: '+ req.body.ownerFirstName)
		res.status(201).json(dog)
	})
})

module.exports = router